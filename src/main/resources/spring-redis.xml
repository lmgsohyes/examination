<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" 
  xmlns:util="http://www.springframework.org/schema/util" 
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:tx="http://www.springframework.org/schema/tx" 
  xmlns:cache="http://www.springframework.org/schema/cache" 
  xmlns:task="http://www.springframework.org/schema/task"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <!--（1）注意新版的（具体从哪个版本开始不清楚，有兴趣可以查一下）JedisPoolConfig的property name，不是maxActive而是maxTotal，而且没有maxWait属性，建议看一下Jedis源码。-->  
    <!-- redis连接池 -->  
    <bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${redis.maxActive}"></property>  
        <property name="maxIdle" value="${redis.maxIdle}"></property>  
        <property name="maxWaitMillis" value="${redis.maxWait}"></property>  
        <property name="testOnBorrow" value="${redis.testOnBorrow}"></property>  
    </bean>  
    <!-- redis连接工厂 -->  
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="hostName" value="${redis.host}"></property>  
        <property name="port" value="${redis.port}"></property>  
        <property name="password" value="${redis.password}"></property>  
        <property name="poolConfig" ref="jedisConfig"></property>  
        <!-- 集群配置  和上面不共存
        <constructor-arg name="clusterConfig" ref="redisClusterConfig" /> 
         -->
    </bean>  
    <!-- redis操作模板，这里采用尽量面向对象的模板 -->  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="connectionFactory"/>  
        <!--如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！-->  
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
        </property>  
        <property name="valueSerializer">  
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
        </property>
         <property name="hashKeySerializer">      
           <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>      
        </property>    
        <property name="hashValueSerializer">    
           <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>      
        </property>      
        <!--开启事务-->  
        <property name="enableTransactionSupport" value="true"/>  
    </bean>
    
    <!-- redis集群配置 
    <bean id="redisClusterConfig" class="org.springframework.data.redis.connection.RedisClusterConfiguration">    
            <property name="maxRedirects" value="3" />    
            <property name="clusterNodes">    
                <set>    
               <bean class="org.springframework.data.redis.connection.RedisNode">    
                   <constructor-arg name="host" value="192.168.*.*"></constructor-arg>     
                   <constructor-arg name="port" value="6379"></constructor-arg>    
               </bean>    
                   <bean class="org.springframework.data.redis.connection.RedisNode">    
                       <constructor-arg name="host" value="192.168.*.*"></constructor-arg>     
                       <constructor-arg name="port" value="6380"></constructor-arg>    
                   </bean>    
                   <bean class="org.springframework.data.redis.connection.RedisNode">    
                       <constructor-arg name="host" value="192.168.*.*"></constructor-arg>     
                       <constructor-arg name="port" value="6381"></constructor-arg>    
                   </bean>    
               </set>    
           </property>    
       </bean>
       -->    
</beans>